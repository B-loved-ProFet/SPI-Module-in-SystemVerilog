
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.13+15 (git sha1 bc027b2ca, clang 13.0.0-2 -fPIC -Os)


-- Executing script file `spi_slave_1.ys' --

1. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/exe_unit_1_rtl.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/exe_unit_1_rtl.sv' to AST representation.
Generating RTLIL representation for module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Generating RTLIL representation for module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Generating RTLIL representation for module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Generating RTLIL representation for module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Generating RTLIL representation for module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Generating RTLIL representation for module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Generating RTLIL representation for module `\exe_unit_rtl'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/shifter.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/shifter.sv' to AST representation.
Generating RTLIL representation for module `\shifter'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv' to AST representation.
Generating RTLIL representation for module `\spi_exe_unit_1'.
Warning: wire '\result_enable' is assigned in a block at ../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:69.5-69.23.
../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:69: Warning: Identifier `\result_enable' is implicitly declared.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/watchdog.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/watchdog.sv' to AST representation.
Generating RTLIL representation for module `\watchdog'.
Successfully finished Verilog frontend.

5. Executing PREP pass.

5.1. Executing HIERARCHY pass (managing design hierarchy).

5.1.1. Analyzing design hierarchy..
Top module:  \spi_exe_unit_1
Used module:     \watchdog
Used module:     \shifter
Used module:     \exe_unit_rtl
Used module:         \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000
Used module:         \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Parameter \N = 4

5.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\watchdog'.
Parameter \N = 4
Generating RTLIL representation for module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Parameter \N = 28

5.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\shifter'.
Parameter \N = 28
Generating RTLIL representation for module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Parameter \N = 8

5.1.4. Executing AST frontend in derive mode using pre-parsed AST for module `\shifter'.
Parameter \N = 8
Generating RTLIL representation for module `$paramod\shifter\N=s32'00000000000000000000000000001000'.

5.1.5. Analyzing design hierarchy..
Top module:  \spi_exe_unit_1
Used module:     $paramod\watchdog\N=s32'00000000000000000000000000000100
Used module:     $paramod\shifter\N=s32'00000000000000000000000000011100
Used module:     $paramod\shifter\N=s32'00000000000000000000000000001000
Used module:     \exe_unit_rtl
Used module:         \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000
Used module:         \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval

5.1.6. Analyzing design hierarchy..
Top module:  \spi_exe_unit_1
Used module:     $paramod\watchdog\N=s32'00000000000000000000000000000100
Used module:     $paramod\shifter\N=s32'00000000000000000000000000011100
Used module:     $paramod\shifter\N=s32'00000000000000000000000000001000
Used module:     \exe_unit_rtl
Used module:         \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000
Used module:         \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Removing unused module `\watchdog'.
Removing unused module `\shifter'.
Removed 2 unused modules.

5.2. Executing PROC pass (convert processes to netlists).

5.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$703 in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$701 in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$711 in module $paramod\shifter\N=s32'00000000000000000000000000001000.
Marked 2 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$710 in module $paramod\shifter\N=s32'00000000000000000000000000001000.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:163$693 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$691 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:145$689 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:137$687 in module spi_exe_unit_1.
Marked 5 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$708 in module $paramod\shifter\N=s32'00000000000000000000000000011100.
Marked 2 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$707 in module $paramod\shifter\N=s32'00000000000000000000000000011100.
Removed a total of 0 dead cases.

5.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 5 redundant assignments.
Promoted 25 assignments to connections.

5.2.4. Executing PROC_INIT pass (extract init attributes).

5.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \i_rst_n in `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$701'.
Found async reset \i_rst_n in `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$711'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:163$693'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$691'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:145$689'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:137$687'.
Found async reset \i_rst_n in `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$708'.

5.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$703'.
     1/6: $3\o_inter[0:0]
     2/6: $2\s_count_next[3:0]
     3/6: $2\o_inter[0:0]
     4/6: $1\s_count_next[3:0]
     5/6: $1\s_cycles_next[3:0]
     6/6: $1\o_inter[0:0]
Creating decoders for process `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$701'.
     1/2: $0\s_cycles[3:0]
     2/2: $0\s_count[3:0]
Creating decoders for process `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$711'.
     1/1: $0\s_shifter[7:0]
Creating decoders for process `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$710'.
     1/2: $2\s_shifter_next[7:0]
     2/2: $1\s_shifter_next[7:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:163$693'.
     1/1: $0\s_oper[7:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$691'.
     1/1: $0\s_argB[7:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:145$689'.
     1/1: $0\s_argA[7:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:137$687'.
     1/1: $0\s_state[2:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
     1/34: $5\s_en_out[0:0]
     2/34: $5\s_en_in[0:0]
     3/34: $2\oper_enable[0:0]
     4/34: $2\s_oper_next[7:0]
     5/34: $5\s_state_next[2:0]
     6/34: $4\s_en_out[0:0]
     7/34: $4\s_en_in[0:0]
     8/34: $2\argB_enable[0:0]
     9/34: $2\s_argB_next[7:0]
    10/34: $4\s_state_next[2:0]
    11/34: $3\s_en_out[0:0]
    12/34: $3\s_en_in[0:0]
    13/34: $2\argA_enable[0:0]
    14/34: $2\s_argA_next[7:0]
    15/34: $3\s_state_next[2:0]
    16/34: $2\s_en_out[0:0]
    17/34: $2\s_en_in[0:0]
    18/34: $2\s_cycles[3:0]
    19/34: $2\s_we[0:0]
    20/34: $2\s_state_next[2:0]
    21/34: $1\s_state_next[2:0]
    22/34: $1\s_en_out[0:0]
    23/34: $1\s_en_in[0:0]
    24/34: $1\s_we[0:0]
    25/34: $1\s_cycles[3:0]
    26/34: $1\s_wrt_out[0:0]
    27/34: $1\oper_enable[0:0]
    28/34: $1\argB_enable[0:0]
    29/34: $1\argA_enable[0:0]
    30/34: $1\s_oper_next[7:0]
    31/34: $1\s_argB_next[7:0]
    32/34: $1\s_argA_next[7:0]
    33/34: $1\s_flags[3:0]
    34/34: $1\s_result[7:0]
Creating decoders for process `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$708'.
     1/1: $0\s_shifter[27:0]
Creating decoders for process `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$707'.
     1/2: $2\s_shifter_next[27:0]
     2/2: $1\s_shifter_next[27:0]

5.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\watchdog\N=s32'00000000000000000000000000000100.\o_inter' from process `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$703'.
No latch inferred for signal `$paramod\watchdog\N=s32'00000000000000000000000000000100.\s_count_next' from process `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$703'.
No latch inferred for signal `$paramod\watchdog\N=s32'00000000000000000000000000000100.\s_cycles_next' from process `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$703'.
No latch inferred for signal `$paramod\shifter\N=s32'00000000000000000000000000001000.\o_bit' from process `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$710'.
No latch inferred for signal `$paramod\shifter\N=s32'00000000000000000000000000001000.\o_data' from process `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$710'.
No latch inferred for signal `$paramod\shifter\N=s32'00000000000000000000000000001000.\s_shifter_next' from process `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$710'.
No latch inferred for signal `\spi_exe_unit_1.\s_cycles' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\s_we' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\argA_enable' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\argB_enable' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\oper_enable' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\s_en_in' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\s_wrt_in' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\s_en_out' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\s_wrt_out' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\s_state_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
No latch inferred for signal `\spi_exe_unit_1.\result_enable' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
Latch inferred for signal `\spi_exe_unit_1.\s_result' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685': $auto$proc_dlatch.cc:427:proc_dlatch$999
Latch inferred for signal `\spi_exe_unit_1.\s_flags' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685': $auto$proc_dlatch.cc:427:proc_dlatch$1010
Latch inferred for signal `\spi_exe_unit_1.\s_argA_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685': $auto$proc_dlatch.cc:427:proc_dlatch$1021
Latch inferred for signal `\spi_exe_unit_1.\s_argB_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685': $auto$proc_dlatch.cc:427:proc_dlatch$1050
Latch inferred for signal `\spi_exe_unit_1.\s_oper_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685': $auto$proc_dlatch.cc:427:proc_dlatch$1071
No latch inferred for signal `$paramod\shifter\N=s32'00000000000000000000000000011100.\o_bit' from process `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$707'.
No latch inferred for signal `$paramod\shifter\N=s32'00000000000000000000000000011100.\o_data' from process `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$707'.
No latch inferred for signal `$paramod\shifter\N=s32'00000000000000000000000000011100.\s_shifter_next' from process `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$707'.

5.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\watchdog\N=s32'00000000000000000000000000000100.\s_cycles' using process `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$701'.
  created $adff cell `$procdff$1092' with positive edge clock and negative level reset.
Creating register for signal `$paramod\watchdog\N=s32'00000000000000000000000000000100.\s_count' using process `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$701'.
  created $adff cell `$procdff$1093' with positive edge clock and negative level reset.
Creating register for signal `$paramod\shifter\N=s32'00000000000000000000000000001000.\s_shifter' using process `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$711'.
  created $adff cell `$procdff$1094' with positive edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\s_oper' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:163$693'.
  created $adff cell `$procdff$1095' with positive edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\s_argB' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$691'.
  created $adff cell `$procdff$1096' with positive edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\s_argA' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:145$689'.
  created $adff cell `$procdff$1097' with positive edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\s_state' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:137$687'.
  created $adff cell `$procdff$1098' with positive edge clock and negative level reset.
Creating register for signal `$paramod\shifter\N=s32'00000000000000000000000000011100.\s_shifter' using process `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$708'.
  created $adff cell `$procdff$1099' with positive edge clock and negative level reset.

5.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$703'.
Removing empty process `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$703'.
Removing empty process `$paramod\watchdog\N=s32'00000000000000000000000000000100.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$701'.
Removing empty process `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$711'.
Found and cleaned up 2 empty switches in `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$710'.
Removing empty process `$paramod\shifter\N=s32'00000000000000000000000000001000.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$710'.
Found and cleaned up 1 empty switch in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:163$693'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:163$693'.
Found and cleaned up 1 empty switch in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$691'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$691'.
Found and cleaned up 1 empty switch in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:145$689'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:145$689'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:137$687'.
Found and cleaned up 5 empty switches in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$685'.
Removing empty process `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$708'.
Found and cleaned up 2 empty switches in `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$707'.
Removing empty process `$paramod\shifter\N=s32'00000000000000000000000000011100.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$707'.
Cleaned up 15 empty switches.

5.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
<suppressed ~1 debug messages>
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module spi_exe_unit_1.
<suppressed ~59 debug messages>
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module exe_unit_rtl.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.

5.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module spi_exe_unit_1.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module exe_unit_rtl.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.

5.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Removed 13 unused cells and 853 unused wires.
<suppressed ~24 debug messages>

5.5. Executing CHECK pass (checking for obvious problems).
Checking module $paramod\shifter\N=s32'00000000000000000000000000001000...
Checking module $paramod\shifter\N=s32'00000000000000000000000000011100...
Checking module $paramod\watchdog\N=s32'00000000000000000000000000000100...
Checking module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval...
Checking module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000...
Checking module exe_unit_rtl...
Checking module spi_exe_unit_1...
Found and reported 0 problems.

5.6. Executing OPT pass (performing simple optimizations).

5.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

5.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

5.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$741.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$994.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$720.
    dead port 1/2 on $mux $procmux$726.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$797.
    dead port 2/2 on $mux $procmux$805.
    dead port 2/2 on $mux $procmux$821.
    dead port 2/2 on $mux $procmux$829.
    dead port 2/2 on $mux $procmux$837.
    dead port 2/2 on $mux $procmux$846.
    dead port 2/2 on $mux $procmux$864.
    dead port 2/2 on $mux $procmux$874.
    dead port 2/2 on $mux $procmux$884.
    dead port 2/2 on $mux $procmux$894.
    dead port 2/2 on $mux $procmux$904.
    dead port 2/2 on $mux $procmux$914.
    dead port 2/2 on $mux $procmux$756.
    dead port 2/2 on $mux $procmux$762.
    dead port 2/2 on $mux $procmux$769.
    dead port 2/2 on $mux $procmux$783.
    dead port 2/2 on $mux $procmux$790.
Removed 21 multiplexer ports.
<suppressed ~17 debug messages>

5.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
    New ctrl vector for $pmux cell $procmux$925: $procmux$875_CMP
    New ctrl vector for $pmux cell $procmux$932: $procmux$875_CMP
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 2 changes.

5.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

5.6.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 0 unused cells and 63 unused wires.
<suppressed ~4 debug messages>

5.6.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

5.6.8. Rerunning OPT passes. (Maybe there is more to do..)

5.6.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

5.6.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 0 changes.

5.6.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

5.6.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

5.6.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

5.6.14. Finished OPT passes. (There is nothing left to do.)

5.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell $paramod\watchdog\N=s32'00000000000000000000000000000100.$gt$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:53$704 ($gt).
Removed top 31 bits (of 32) from port B of cell $paramod\watchdog\N=s32'00000000000000000000000000000100.$sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$705 ($sub).
Removed top 28 bits (of 32) from port Y of cell $paramod\watchdog\N=s32'00000000000000000000000000000100.$sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$705 ($sub).
Removed top 28 bits (of 32) from wire $paramod\watchdog\N=s32'00000000000000000000000000000100.$sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$705_Y.
Removed top 3 bits (of 4) from wire $paramod\watchdog\N=s32'00000000000000000000000000000100.s_cycles_next.
Removed top 1 bits (of 3) from port B of cell spi_exe_unit_1.$procmux$757_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell spi_exe_unit_1.$procmux$791_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell spi_exe_unit_1.$procmux$830_CMP0 ($eq).

5.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.9. Executing MEMORY_COLLECT pass (generating $mem cells).

5.10. Executing OPT pass (performing simple optimizations).

5.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

5.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

5.10.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

5.10.4. Finished fast OPT passes.

5.11. Printing statistics.

=== $paramod\shifter\N=s32'00000000000000000000000000001000 ===

   Number of wires:                 11
   Number of wire bits:             46
   Number of public wires:          10
   Number of public wire bits:      38
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $adff                           1
     $mux                            2

=== $paramod\shifter\N=s32'00000000000000000000000000011100 ===

   Number of wires:                 11
   Number of wire bits:            146
   Number of public wires:          10
   Number of public wire bits:     118
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $adff                           1
     $mux                            2

=== $paramod\watchdog\N=s32'00000000000000000000000000000100 ===

   Number of wires:                 16
   Number of wire bits:             65
   Number of public wires:           9
   Number of public wire bits:      21
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $adff                           2
     $gt                             1
     $logic_not                      1
     $mux                            6
     $sub                            1

=== \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval ===

   Number of wires:                 15
   Number of wire bits:             41
   Number of public wires:          15
   Number of public wire bits:      41
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $and                            6
     $xor                            6

=== \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000 ===

   Number of wires:                 43
   Number of wire bits:             52
   Number of public wires:          43
   Number of public wire bits:      52
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 44
     $and                           16
     $not                            8
     $or                            20

=== \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000 ===

   Number of wires:                 23
   Number of wire bits:             32
   Number of public wires:          23
   Number of public wire bits:      32
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $and                            5
     $not                            6
     $or                            13

=== \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000 ===

   Number of wires:                 18
   Number of wire bits:             32
   Number of public wires:          18
   Number of public wire bits:      32
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 23
     $and                            9
     $not                            2
     $or                             7
     $xor                            5

=== \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000 ===

   Number of wires:                 17
   Number of wire bits:             31
   Number of public wires:          17
   Number of public wire bits:      31
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $and                            8
     $not                            2
     $or                             6
     $xor                            5

=== \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000 ===

   Number of wires:                133
   Number of wire bits:            154
   Number of public wires:         133
   Number of public wire bits:     154
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                134
     $and                           30
     $not                           25
     $or                            43
     $xor                           36

=== exe_unit_rtl ===

   Number of wires:                427
   Number of wire bits:            476
   Number of public wires:         427
   Number of public wire bits:     476
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                430
     $and                          197
     $not                           51
     $or                           155
     $xor                           20
     \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval      2
     \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000      1
     \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000      1
     \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000      1
     \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000      1
     \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000      1

=== spi_exe_unit_1 ===

   Number of wires:                 57
   Number of wire bits:            165
   Number of public wires:          29
   Number of public wire bits:     105
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 49
     $adff                           4
     $and                            6
     $dlatch                         5
     $eq                             4
     $logic_not                      1
     $mux                           17
     $not                            4
     $paramod\shifter\N=s32'00000000000000000000000000001000      1
     $paramod\shifter\N=s32'00000000000000000000000000011100      1
     $paramod\watchdog\N=s32'00000000000000000000000000000100      1
     $pmux                           1
     $reduce_or                      3
     exe_unit_rtl                    1

=== design hierarchy ===

   spi_exe_unit_1                    1
     $paramod\shifter\N=s32'00000000000000000000000000001000      1
     $paramod\shifter\N=s32'00000000000000000000000000011100      1
     $paramod\watchdog\N=s32'00000000000000000000000000000100      1
     exe_unit_rtl                    1
       \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval      2
       \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000      1
       \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000      1
       \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000      1
       \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000      1
       \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000      1

   Number of wires:                786
   Number of wire bits:           1281
   Number of public wires:         749
   Number of public wire bits:    1141
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                755
     $adff                           8
     $and                          283
     $dlatch                         5
     $eq                             4
     $gt                             1
     $logic_not                      2
     $mux                           27
     $not                           98
     $or                           244
     $pmux                           1
     $reduce_or                      3
     $sub                            1
     $xor                           78

5.12. Executing CHECK pass (checking for obvious problems).
Checking module $paramod\shifter\N=s32'00000000000000000000000000001000...
Checking module $paramod\shifter\N=s32'00000000000000000000000000011100...
Checking module $paramod\watchdog\N=s32'00000000000000000000000000000100...
Checking module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval...
Checking module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000...
Checking module exe_unit_rtl...
Checking module spi_exe_unit_1...
Found and reported 0 problems.

6. Executing JSON backend.

7. Executing SYNTH pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \spi_exe_unit_1
Used module:     $paramod\watchdog\N=s32'00000000000000000000000000000100
Used module:     \exe_unit_rtl
Used module:         \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:         \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000
Used module:     $paramod\shifter\N=s32'00000000000000000000000000001000
Used module:     $paramod\shifter\N=s32'00000000000000000000000000011100

7.1.2. Analyzing design hierarchy..
Top module:  \spi_exe_unit_1
Used module:     $paramod\watchdog\N=s32'00000000000000000000000000000100
Used module:     \exe_unit_rtl
Used module:         \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:         \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000
Used module:     $paramod\shifter\N=s32'00000000000000000000000000001000
Used module:     $paramod\shifter\N=s32'00000000000000000000000000011100
Removed 0 unused modules.

7.2. Executing PROC pass (convert processes to netlists).

7.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

7.2.4. Executing PROC_INIT pass (extract init attributes).

7.2.5. Executing PROC_ARST pass (detect async resets in processes).

7.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).

7.2.8. Executing PROC_DFF pass (convert process syncs to FFs).

7.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.5. Executing CHECK pass (checking for obvious problems).
Checking module $paramod\shifter\N=s32'00000000000000000000000000001000...
Checking module $paramod\shifter\N=s32'00000000000000000000000000011100...
Checking module $paramod\watchdog\N=s32'00000000000000000000000000000100...
Checking module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval...
Checking module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000...
Checking module exe_unit_rtl...
Checking module spi_exe_unit_1...
Found and reported 0 problems.

7.6. Executing OPT pass (performing simple optimizations).

7.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

7.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 0 changes.

7.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.6.6. Executing OPT_DFF pass (perform DFF optimizations).

7.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.6.9. Finished OPT passes. (There is nothing left to do.)

7.7. Executing FSM pass (extract and optimize FSM).

7.7.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking spi_exe_unit_1.s_state as FSM state register:
    Circuit seems to be self-resetting.

7.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

7.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

7.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

7.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

7.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

7.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

7.8. Executing OPT pass (performing simple optimizations).

7.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

7.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 0 changes.

7.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1094 ($adff) from module $paramod\shifter\N=s32'00000000000000000000000000001000 (D = $2\s_shifter_next[7:0], Q = \s_shifter).
Adding EN signal on $procdff$1099 ($adff) from module $paramod\shifter\N=s32'00000000000000000000000000011100 (D = $2\s_shifter_next[27:0], Q = \s_shifter).
Adding EN signal on $procdff$1092 ($adff) from module $paramod\watchdog\N=s32'00000000000000000000000000000100 (D = \i_cycles, Q = \s_cycles).
Adding EN signal on $procdff$1098 ($adff) from module spi_exe_unit_1 (D = \s_state_next, Q = \s_state).
Adding EN signal on $procdff$1097 ($adff) from module spi_exe_unit_1 (D = \s_argA_next, Q = \s_argA).
Adding EN signal on $procdff$1096 ($adff) from module spi_exe_unit_1 (D = \s_argB_next, Q = \s_argB).
Adding EN signal on $procdff$1095 ($adff) from module spi_exe_unit_1 (D = \s_oper_next, Q = \s_oper).

7.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 6 unused cells and 7 unused wires.
<suppressed ~11 debug messages>

7.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.8.9. Rerunning OPT passes. (Maybe there is more to do..)

7.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

7.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 0 changes.

7.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.8.13. Executing OPT_DFF pass (perform DFF optimizations).

7.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.8.16. Finished OPT passes. (There is nothing left to do.)

7.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 bits (of 32) from wire $paramod\watchdog\N=s32'00000000000000000000000000000100.$auto$wreduce.cc:454:run$1100.
Removed cell spi_exe_unit_1.$procmux$781 ($mux).
Removed cell spi_exe_unit_1.$procmux$819 ($mux).
Removed cell spi_exe_unit_1.$procmux$862 ($mux).
Removed cell spi_exe_unit_1.$procmux$912 ($mux).

7.10. Executing PEEPOPT pass (run peephole optimizers).

7.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 0 unused cells and 5 unused wires.
<suppressed ~2 debug messages>

7.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod\shifter\N=s32'00000000000000000000000000001000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\shifter\N=s32'00000000000000000000000000011100:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100:
  creating $macc model for $sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$705 ($sub).
  creating $alu model for $macc $sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$705.
  creating $alu model for $gt$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:53$704 ($gt): new $alu
  creating $alu cell for $gt$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:53$704: $auto$alumacc.cc:485:replace_alu$1121
  creating $alu cell for $sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$705: $auto$alumacc.cc:485:replace_alu$1126
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module exe_unit_rtl:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module spi_exe_unit_1:
  created 0 $alu and 0 $macc cells.

7.13. Executing SHARE pass (SAT-based resource sharing).

7.14. Executing OPT pass (performing simple optimizations).

7.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
<suppressed ~2 debug messages>
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

7.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 0 changes.

7.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.14.6. Executing OPT_DFF pass (perform DFF optimizations).

7.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

7.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.14.9. Rerunning OPT passes. (Maybe there is more to do..)

7.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

7.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 0 changes.

7.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.14.13. Executing OPT_DFF pass (perform DFF optimizations).

7.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.14.16. Finished OPT passes. (There is nothing left to do.)

7.15. Executing MEMORY pass.

7.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

7.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

7.15.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

7.15.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.15.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.15.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.15.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.15.9. Executing MEMORY_COLLECT pass (generating $mem cells).

7.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.17. Executing OPT pass (performing simple optimizations).

7.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
<suppressed ~1 debug messages>
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.
<suppressed ~7 debug messages>

7.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.17.3. Executing OPT_DFF pass (perform DFF optimizations).

7.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

7.17.5. Finished fast OPT passes.

7.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

7.19. Executing OPT pass (performing simple optimizations).

7.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
    Consolidated identical input bits for $mux cell $procmux$892:
      Old ports: A=4'1000, B=4'0000, Y=$2\s_cycles[3:0]
      New ports: A=1'1, B=1'0, Y=$2\s_cycles[3:0] [3]
      New connections: $2\s_cycles[3:0] [2:0] = 3'000
  Optimizing cells in module \spi_exe_unit_1.
    Consolidated identical input bits for $mux cell $procmux$949:
      Old ports: A=4'0000, B=$2\s_cycles[3:0], Y=\s_cycles
      New ports: A=1'0, B=$2\s_cycles[3:0] [3], Y=\s_cycles [3]
      New connections: \s_cycles [2:0] = 3'000
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 2 changes.

7.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.19.6. Executing OPT_SHARE pass.

7.19.7. Executing OPT_DFF pass (perform DFF optimizations).

7.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.
<suppressed ~2 debug messages>

7.19.10. Rerunning OPT passes. (Maybe there is more to do..)

7.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

7.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 0 changes.

7.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

7.19.14. Executing OPT_SHARE pass.

7.19.15. Executing OPT_DFF pass (perform DFF optimizations).

7.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

7.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.19.18. Rerunning OPT passes. (Maybe there is more to do..)

7.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=s32'00000000000000000000000000011100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

7.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\shifter\N=s32'00000000000000000000000000011100.
  Optimizing cells in module $paramod\watchdog\N=s32'00000000000000000000000000000100.
  Optimizing cells in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
  Optimizing cells in module \exe_unit_rtl.
  Optimizing cells in module \spi_exe_unit_1.
Performed a total of 0 changes.

7.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
Removed a total of 0 cells.

7.19.22. Executing OPT_SHARE pass.

7.19.23. Executing OPT_DFF pass (perform DFF optimizations).

7.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..

7.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.

7.19.26. Finished OPT passes. (There is nothing left to do.)

7.20. Executing TECHMAP pass (map to technology primitives).

7.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~1004 debug messages>

7.21. Executing OPT pass (performing simple optimizations).

7.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
<suppressed ~43 debug messages>
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
Optimizing module spi_exe_unit_1.
<suppressed ~59 debug messages>

7.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
<suppressed ~15 debug messages>
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
<suppressed ~12 debug messages>
Removed a total of 9 cells.

7.21.3. Executing OPT_DFF pass (perform DFF optimizations).

7.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 17 unused cells and 127 unused wires.
<suppressed ~19 debug messages>

7.21.5. Finished fast OPT passes.

7.22. Executing ABC pass (technology mapping using ABC).

7.22.1. Extracting gate netlist of module `$paramod\shifter\N=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 25 wires to a netlist network with 17 inputs and 8 outputs.

7.22.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        8
Removing temp directory.

7.22.2. Extracting gate netlist of module `$paramod\shifter\N=s32'00000000000000000000000000011100' to `<abc-temp-dir>/input.blif'..
Extracted 28 gates and 85 wires to a netlist network with 57 inputs and 28 outputs.

7.22.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.2.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       28
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       57
ABC RESULTS:          output signals:       28
Removing temp directory.

7.22.3. Extracting gate netlist of module `$paramod\watchdog\N=s32'00000000000000000000000000000100' to `<abc-temp-dir>/input.blif'..
Extracted 27 gates and 41 wires to a netlist network with 13 inputs and 5 outputs.

7.22.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.3.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        5
Removing temp directory.

7.22.4. Extracting gate netlist of module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval' to `<abc-temp-dir>/input.blif'..
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 3 outputs.

7.22.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

7.22.5. Extracting gate netlist of module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 44 gates and 52 wires to a netlist network with 8 inputs and 4 outputs.

7.22.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        3
ABC RESULTS:                OR cells:       11
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       40
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

7.22.6. Extracting gate netlist of module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 24 gates and 32 wires to a netlist network with 8 inputs and 3 outputs.

7.22.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.6.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        3
Removing temp directory.

7.22.7. Extracting gate netlist of module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 23 gates and 31 wires to a netlist network with 8 inputs and 7 outputs.

7.22.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

7.22.8. Extracting gate netlist of module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 21 gates and 29 wires to a netlist network with 8 inputs and 6 outputs.

7.22.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        6
Removing temp directory.

7.22.9. Extracting gate netlist of module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000' to `<abc-temp-dir>/input.blif'..
Extracted 134 gates and 150 wires to a netlist network with 16 inputs and 4 outputs.

7.22.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       39
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       13
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               XOR cells:       31
ABC RESULTS:        internal signals:      130
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        4
Removing temp directory.

7.22.10. Extracting gate netlist of module `\exe_unit_rtl' to `<abc-temp-dir>/input.blif'..
Extracted 423 gates and 475 wires to a netlist network with 52 inputs and 11 outputs.

7.22.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       15
ABC RESULTS:            ANDNOT cells:      126
ABC RESULTS:               MUX cells:       18
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:       12
ABC RESULTS:                OR cells:       98
ABC RESULTS:             ORNOT cells:       24
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:       11
ABC RESULTS:        internal signals:      412
ABC RESULTS:           input signals:       52
ABC RESULTS:          output signals:       11
Removing temp directory.

7.22.11. Extracting gate netlist of module `\spi_exe_unit_1' to `<abc-temp-dir>/input.blif'..
Extracted 48 gates and 55 wires to a netlist network with 5 inputs and 14 outputs.

7.22.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.11.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       11
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:       14
Removing temp directory.

7.23. Executing OPT pass (performing simple optimizations).

7.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\shifter\N=s32'00000000000000000000000000011100.
Optimizing module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Optimizing module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Optimizing module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Optimizing module exe_unit_rtl.
<suppressed ~9 debug messages>
Optimizing module spi_exe_unit_1.
<suppressed ~12 debug messages>

7.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\shifter\N=s32'00000000000000000000000000011100'.
Finding identical cells in module `$paramod\watchdog\N=s32'00000000000000000000000000000100'.
<suppressed ~3 debug messages>
Finding identical cells in module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000'.
<suppressed ~9 debug messages>
Finding identical cells in module `\exe_unit_rtl'.
Finding identical cells in module `\spi_exe_unit_1'.
<suppressed ~3 debug messages>
Removed a total of 5 cells.

7.23.3. Executing OPT_DFF pass (perform DFF optimizations).

7.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 1 unused cells and 982 unused wires.
<suppressed ~12 debug messages>

7.23.5. Finished fast OPT passes.

7.24. Executing HIERARCHY pass (managing design hierarchy).

7.24.1. Analyzing design hierarchy..
Top module:  \spi_exe_unit_1
Used module:     $paramod\watchdog\N=s32'00000000000000000000000000000100
Used module:     \exe_unit_rtl
Used module:         \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:         \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000
Used module:     $paramod\shifter\N=s32'00000000000000000000000000001000
Used module:     $paramod\shifter\N=s32'00000000000000000000000000011100

7.24.2. Analyzing design hierarchy..
Top module:  \spi_exe_unit_1
Used module:     $paramod\watchdog\N=s32'00000000000000000000000000000100
Used module:     \exe_unit_rtl
Used module:         \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:         \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000
Used module:         \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000
Used module:     $paramod\shifter\N=s32'00000000000000000000000000001000
Used module:     $paramod\shifter\N=s32'00000000000000000000000000011100
Removed 0 unused modules.

7.25. Printing statistics.

=== $paramod\shifter\N=s32'00000000000000000000000000001000 ===

   Number of wires:                 10
   Number of wire bits:             38
   Number of public wires:           9
   Number of public wire bits:      30
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     $_DFFE_PN0P_                    8
     $_MUX_                          8

=== $paramod\shifter\N=s32'00000000000000000000000000011100 ===

   Number of wires:                 10
   Number of wire bits:            118
   Number of public wires:           9
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 56
     $_DFFE_PN0P_                   28
     $_MUX_                         28

=== $paramod\watchdog\N=s32'00000000000000000000000000000100 ===

   Number of wires:                 25
   Number of wire bits:             37
   Number of public wires:           8
   Number of public wire bits:      20
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 30
     $_ANDNOT_                       5
     $_DFFE_PN0P_                    4
     $_DFF_PN0_                      4
     $_MUX_                          8
     $_NOR_                          2
     $_NOT_                          2
     $_OR_                           2
     $_XNOR_                         1
     $_XOR_                          2

=== \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval ===

   Number of wires:                 15
   Number of wire bits:             41
   Number of public wires:           6
   Number of public wire bits:      32
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $_AND_                          2
     $_NAND_                         4
     $_XOR_                          6

=== \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000 ===

   Number of wires:                 32
   Number of wire bits:             41
   Number of public wires:           3
   Number of public wire bits:      12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 33
     $_ANDNOT_                      12
     $_AND_                          4
     $_NAND_                         2
     $_NOR_                          3
     $_ORNOT_                        1
     $_OR_                          11

=== \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000 ===

   Number of wires:                 17
   Number of wire bits:             26
   Number of public wires:           2
   Number of public wire bits:      11
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 18
     $_ANDNOT_                       5
     $_MUX_                          1
     $_NAND_                         2
     $_NOR_                          4
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                           4

=== \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000 ===

   Number of wires:                 16
   Number of wire bits:             30
   Number of public wires:           2
   Number of public wire bits:      16
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $_ANDNOT_                       3
     $_AND_                          6
     $_NOR_                          1
     $_OR_                           6
     $_XOR_                          5

=== \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000 ===

   Number of wires:                 16
   Number of wire bits:             30
   Number of public wires:           2
   Number of public wire bits:      16
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 20
     $_ANDNOT_                       5
     $_AND_                          3
     $_NOR_                          1
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                           4
     $_XNOR_                         2
     $_XOR_                          3

=== \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000 ===

   Number of wires:                107
   Number of wire bits:            128
   Number of public wires:           3
   Number of public wire bits:      24
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                108
     $_ANDNOT_                      39
     $_AND_                          1
     $_MUX_                          2
     $_NAND_                         2
     $_NOR_                          6
     $_NOT_                          3
     $_ORNOT_                        8
     $_OR_                          13
     $_XNOR_                         6
     $_XOR_                         28

=== exe_unit_rtl ===

   Number of wires:                335
   Number of wire bits:            384
   Number of public wires:          15
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                338
     $_ANDNOT_                     126
     $_AND_                         15
     $_MUX_                         18
     $_NAND_                        10
     $_NOR_                          9
     $_NOT_                         12
     $_ORNOT_                       24
     $_OR_                          98
     $_XNOR_                         8
     $_XOR_                         11
     \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval      2
     \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000      1
     \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000      1
     \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000      1
     \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000      1
     \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000      1

=== spi_exe_unit_1 ===

   Number of wires:                 55
   Number of wire bits:            131
   Number of public wires:          29
   Number of public wire bits:     105
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 94
     $_ANDNOT_                      16
     $_DFFE_PN0P_                   23
     $_DLATCH_N_                    20
     $_DLATCH_P_                    12
     $_NAND_                         4
     $_NOT_                          3
     $_ORNOT_                        2
     $_OR_                          10
     $paramod\shifter\N=s32'00000000000000000000000000001000      1
     $paramod\shifter\N=s32'00000000000000000000000000011100      1
     $paramod\watchdog\N=s32'00000000000000000000000000000100      1
     exe_unit_rtl                    1

=== design hierarchy ===

   spi_exe_unit_1                    1
     $paramod\shifter\N=s32'00000000000000000000000000001000      1
     $paramod\shifter\N=s32'00000000000000000000000000011100      1
     $paramod\watchdog\N=s32'00000000000000000000000000000100      1
     exe_unit_rtl                    1
       \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval      2
       \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000      1
       \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000      1
       \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000      1
       \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000      1
       \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000      1

   Number of wires:                653
   Number of wire bits:           1045
   Number of public wires:          94
   Number of public wire bits:     452
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                747
     $_ANDNOT_                     211
     $_AND_                         33
     $_DFFE_PN0P_                   63
     $_DFF_PN0_                      4
     $_DLATCH_N_                    20
     $_DLATCH_P_                    12
     $_MUX_                         65
     $_NAND_                        28
     $_NOR_                         26
     $_NOT_                         22
     $_ORNOT_                       37
     $_OR_                         148
     $_XNOR_                        17
     $_XOR_                         61

7.26. Executing CHECK pass (checking for obvious problems).
Checking module $paramod\shifter\N=s32'00000000000000000000000000001000...
Checking module $paramod\shifter\N=s32'00000000000000000000000000011100...
Checking module $paramod\watchdog\N=s32'00000000000000000000000000000100...
Checking module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval...
Checking module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000...
Checking module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000...
Checking module exe_unit_rtl...
Checking module spi_exe_unit_1...
Found and reported 0 problems.

8. Executing ABC pass (technology mapping using ABC).

8.1. Extracting gate netlist of module `$paramod\shifter\N=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 25 wires to a netlist network with 17 inputs and 8 outputs.

8.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       16
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        8
Removing temp directory.

8.2. Extracting gate netlist of module `$paramod\shifter\N=s32'00000000000000000000000000011100' to `<abc-temp-dir>/input.blif'..
Extracted 28 gates and 85 wires to a netlist network with 57 inputs and 28 outputs.

8.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       56
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       28
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       57
ABC RESULTS:          output signals:       28
Removing temp directory.

8.3. Extracting gate netlist of module `$paramod\watchdog\N=s32'00000000000000000000000000000100' to `<abc-temp-dir>/input.blif'..
Extracted 22 gates and 35 wires to a netlist network with 13 inputs and 5 outputs.

8.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       14
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:       19
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        5
Removing temp directory.

8.4. Extracting gate netlist of module `\$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval' to `<abc-temp-dir>/input.blif'..
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 3 outputs.

8.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

8.5. Extracting gate netlist of module `\$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 33 gates and 41 wires to a netlist network with 8 inputs and 4 outputs.

8.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       17
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:       20
ABC RESULTS:        internal signals:       29
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

8.6. Extracting gate netlist of module `\$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 18 gates and 26 wires to a netlist network with 8 inputs and 3 outputs.

8.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:       13
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        3
Removing temp directory.

8.7. Extracting gate netlist of module `\$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 21 gates and 29 wires to a netlist network with 8 inputs and 7 outputs.

8.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        9
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        7
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

8.8. Extracting gate netlist of module `\$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 20 gates and 28 wires to a netlist network with 8 inputs and 6 outputs.

8.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        6
Removing temp directory.

8.9. Extracting gate netlist of module `\$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000' to `<abc-temp-dir>/input.blif'..
Extracted 108 gates and 124 wires to a netlist network with 16 inputs and 4 outputs.

8.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       36
ABC RESULTS:               NOT cells:       27
ABC RESULTS:                OR cells:       46
ABC RESULTS:               XOR cells:       36
ABC RESULTS:        internal signals:      104
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        4
Removing temp directory.

8.10. Extracting gate netlist of module `\exe_unit_rtl' to `<abc-temp-dir>/input.blif'..
Extracted 331 gates and 383 wires to a netlist network with 52 inputs and 11 outputs.

8.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      183
ABC RESULTS:               NOT cells:       56
ABC RESULTS:                OR cells:      160
ABC RESULTS:               XOR cells:       20
ABC RESULTS:        internal signals:      320
ABC RESULTS:           input signals:       52
ABC RESULTS:          output signals:       11
Removing temp directory.

8.11. Extracting gate netlist of module `\spi_exe_unit_1' to `<abc-temp-dir>/input.blif'..
Extracted 35 gates and 40 wires to a netlist network with 5 inputs and 13 outputs.

8.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.11.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:       16
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:       13
Removing temp directory.

9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\shifter\N=s32'00000000000000000000000000011100..
Finding unused cells or wires in module $paramod\watchdog\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \exe_unit_rtl..
Finding unused cells or wires in module \spi_exe_unit_1..
Removed 0 unused cells and 837 unused wires.
<suppressed ~11 debug messages>

10. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\shifter\N=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\shifter\N=s32'00000000000000000000000000011100.
Deleting now unused module $paramod\watchdog\N=s32'00000000000000000000000000000100.
Deleting now unused module \$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Deleting now unused module \$paramod\onehot2nkb_encoder\LEN=s32'00000000000000000000000000001000.
Deleting now unused module \$paramod\priority_encoder\LEN=s32'00000000000000000000000000001000.
Deleting now unused module \$paramod\sign_to_u2\LEN=s32'00000000000000000000000000001000.
Deleting now unused module \$paramod\u2tosign_module\LEN=s32'00000000000000000000000000001000.
Deleting now unused module \$paramod\zero_counter\I_LEN=s32'00000000000000000000000000010000.
Deleting now unused module exe_unit_rtl.
<suppressed ~11 debug messages>

11. Executing Verilog backend.
Dumping module `\spi_exe_unit_1_rtl'.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 2e37f8564d, CPU: user 1.78s system 0.03s, MEM: 18.76 MB peak
Yosys 0.13+15 (git sha1 bc027b2ca, clang 13.0.0-2 -fPIC -Os)
Time spent: 49% 2x abc (1 sec), 12% 25x opt_expr (0 sec), ...
